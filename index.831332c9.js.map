{"mappings":"CAAC,WACC,IAAMA,EAAaC,SAASC,cAAc,sBACpCC,EAAkBF,SAASC,cAAc,4BACzCE,EAAgBH,SAASC,cAAc,eACvCG,EAAwBJ,SAASC,cAAc,wBAC/CI,EAAwD,SAA7CN,EAAWO,aAAa,iBAmBzC,IAAIC,EAjBJ,WAEA,IAAMC,EAAQR,SAASS,cAAc,OACrCD,EAAME,MAAMC,WAAa,SACzBH,EAAME,MAAME,SAAW,SACvBJ,EAAME,MAAMG,gBAAkB,YAC9Bb,SAASc,KAAKC,YAAYP,GAE1B,IAAMQ,EAAQhB,SAASS,cAAc,OACrCD,EAAMO,YAAYC,GAElB,IAAMC,EAAkBT,EAAMU,YAAcF,EAAME,YAGlD,OADAV,EAAMW,WAAWC,YAAYZ,GACtBS,C,CAGWI,GAElBtB,EAAWuB,iBAAiB,SAAS,WACnCpB,EAAgBqB,UAAUC,IAAI,WAC9BzB,EAAWwB,UAAUC,IAAI,WACzBzB,EAAW0B,aAAa,iBAAkBpB,GAC1CF,EAAcoB,UAAUG,OAAO,WAC/BtB,EAAsBmB,UAAUC,IAAI,WACpCxB,SAASc,KAAKS,UAAUC,IAAI,cAE5BxB,SAASc,KAAKJ,MAAMiB,aAAepB,EAAc,I,IAGnDH,EAAsBkB,iBAAiB,SAAS,WAC9CpB,EAAgBqB,UAAUK,OAAO,WACjC7B,EAAWwB,UAAUK,OAAO,WAC5B7B,EAAW0B,aAAa,iBAAkBpB,GAC1CF,EAAcoB,UAAUG,OAAO,WAC/BtB,EAAsBmB,UAAUK,OAAO,WACvC5B,SAASc,KAAKS,UAAUK,OAAO,cAC/B5B,SAASc,KAAKJ,MAAMiB,aAAe,C,GAGtC,CA/CA","sources":["src/js/menu.js"],"sourcesContent":["(() => {\n  const menuBtnRef = document.querySelector('[data-menu-button]');\n  const menuBtnRefClose = document.querySelector('[data-menu-button-close]');\n  const mobileMenuRef = document.querySelector('[data-menu]');\n  const mobileMenuRefBackdrop = document.querySelector('[data-menu-backdrop]');\n  const expanded = menuBtnRef.getAttribute('aria-expanded') === 'true';\n\n  function getScrollbarWidth() {\n  // Creating invisible container\n  const outer = document.createElement('div');\n  outer.style.visibility = 'hidden';\n  outer.style.overflow = 'scroll'; // forcing scrollbar to appear\n  outer.style.msOverflowStyle = 'scrollbar'; // needed for WinJS apps\n  document.body.appendChild(outer);\n  // Creating inner element and placing it in the container\n  const inner = document.createElement('div');\n  outer.appendChild(inner);\n  // Calculating difference between container's full width and the child width\n  const scrollbarWidth = (outer.offsetWidth - inner.offsetWidth);\n  // Removing temporary elements from the DOM\n  outer.parentNode.removeChild(outer);\n  return scrollbarWidth;\n}\n  \n  let scrlBarWdth = getScrollbarWidth();\n\n  menuBtnRef.addEventListener('click', () => {\n    menuBtnRefClose.classList.add('is-open');\n    menuBtnRef.classList.add('is-open');\n    menuBtnRef.setAttribute('aria-expanded', !expanded);\n    mobileMenuRef.classList.toggle('is-open');\n    mobileMenuRefBackdrop.classList.add('is-open');\n    document.body.classList.add('body-fixed');\n    //Adding previously calculated width of the vertical scrool pane as right padding of <body>\n    document.body.style.paddingRight = scrlBarWdth + \"px\";\n  });\n\n  mobileMenuRefBackdrop.addEventListener('click', () => {\n    menuBtnRefClose.classList.remove('is-open');\n    menuBtnRef.classList.remove('is-open');\n    menuBtnRef.setAttribute('aria-expanded', !expanded);\n    mobileMenuRef.classList.toggle('is-open');\n    mobileMenuRefBackdrop.classList.remove('is-open');\n    document.body.classList.remove('body-fixed');\n    document.body.style.paddingRight = 0;\n    //Removing right padding of <body>\n  });\n})();\n"],"names":["menuBtnRef","document","querySelector","menuBtnRefClose","mobileMenuRef","mobileMenuRefBackdrop","expanded","getAttribute","scrlBarWdth","outer","createElement","style","visibility","overflow","msOverflowStyle","body","appendChild","inner","scrollbarWidth","offsetWidth","parentNode","removeChild","getScrollbarWidth","addEventListener","classList","add","setAttribute","toggle","paddingRight","remove"],"version":3,"file":"index.831332c9.js.map"}