{"mappings":"AAAA,IAAMA,aAAe,SAAUC,EAASC,GACtC,IAAMC,EAAcC,SAASC,cAAc,eAC3CF,EAAYG,oBAAoB,QAASC,WACzCJ,EAAYK,iBAAiB,QAASD,WACtCN,EAAQQ,SAAQ,SAAAC,GACVA,EAAMC,eACRR,EAAYS,UAAUC,OAAO,cAE7BV,EAAYS,UAAUE,IAAI,a,KAKhC,SAASP,YACPH,SAASW,KAAKR,UAAYH,SAASY,gBAAgBT,UAAY,C,CAGjE,IAAMU,QAAU,CACdC,KAAM,KACNC,WAAY,MACZC,UAAW,GAGPlB,SAAW,IAAImB,qBAAqBrB,aAAciB,SAElDK,OAASlB,SAASmB,qBAAqB,UAAU,GAEvDrB,SAASsB,QAAQF","sources":["src/js/menu-arrow.js"],"sourcesContent":["const trueCallback = function (entries, observer) {\n  const btnArrowRef = document.querySelector('.link-arrow');\n  btnArrowRef.removeEventListener('click', scrollTop);\n  btnArrowRef.addEventListener('click', scrollTop);\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      btnArrowRef.classList.remove('is-visible');\n    } else {\n      btnArrowRef.classList.add('is-visible');\n    } // intersecting: true or false\n  });\n};\n\nfunction scrollTop() {\n  document.body.scrollTop = document.documentElement.scrollTop = 0;\n}\n\nconst options = {\n  root: null,\n  rootMargin: '0px',\n  threshold: 0,\n};\n\nconst observer = new IntersectionObserver(trueCallback, options);\n\nconst target = document.getElementsByTagName('header')[0];\n\nobserver.observe(target);\n"],"names":["trueCallback","entries","observer","btnArrowRef","document","querySelector","removeEventListener","scrollTop","addEventListener","forEach","entry","isIntersecting","classList","remove","add","body","documentElement","options","root","rootMargin","threshold","IntersectionObserver","target","getElementsByTagName","observe"],"version":3,"file":"index.2955d056.js.map"}